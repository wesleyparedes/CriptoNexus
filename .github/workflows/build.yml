name: 🚀 Build & Auto Release CriptoNexus

on:
  push:
    tags:
      - 'v*' # dispara quando uma tag tipo v1.1.0 é criada

# ✅ Dá permissão pro workflow criar releases e subir artefatos
permissions:
  contents: write
  actions: read
  checks: read
  deployments: read
  issues: read
  pull-requests: read
  statuses: read

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 30

    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: 🔧 Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          cache: true

      - name: 💤 Esperar ambiente estabilizar
        run: sleep 10

      - name: 🧰 Instalar dependências do sistema
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: 📦 Instalar pacotes Flutter
        run: flutter pub get

      - name: 🧹 Limpar build anterior
        run: flutter clean

      # ✅ Atualiza SDK e NDK antes do build
      - name: ⚙️ Atualizar SDK/NDK
        run: |
          echo "Usando SDK 36 e NDK 27.0.12077973"
          echo "compileSdk=36" >> local.properties
          echo "ndkVersion=27.0.12077973" >> local.properties

      - name: 🏗️ Gerar APK (release)
        env:
          NO_WATCHMAN: true
          CHOKIDAR_USEPOLLING: true
        run: flutter build apk --release --no-tree-shake-icons

      # 🔍 Verifica se o APK foi realmente assinado
      - name: 🔒 Verificar assinatura do APK
        run: |
          echo "Verificando assinatura do APK..."
          if ! ${ANDROID_HOME}/build-tools/*/apksigner verify --verbose build/app/outputs/flutter-apk/app-release.apk; then
            echo "❌ Erro: APK não está assinado corretamente!"
            exit 1
          fi
          echo "✅ APK assinado corretamente!"

      # 🔐 Verifica o certificado usado (log informativo)
      - name: 🔍 Mostrar certificado do APK
        run: |
          ${ANDROID_HOME}/build-tools/*/apksigner verify --verbose --print-certs build/app/outputs/flutter-apk/app-release.apk

      # 🧩 Confere integridade (gera hash SHA-256)
      - name: 🧾 Verificar integridade do APK
        run: |
          echo "Gerando hash SHA-256 para validação..."
          sha256sum build/app/outputs/flutter-apk/app-release.apk

      - name: 📝 Gerar changelog automático
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/changelog_config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Definir tag atual
        id: vars
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: 🚀 Criar release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "CriptoNexus ${{ env.TAG_NAME }}"
          body: |
            ✅ Build automatizado concluído com sucesso!
            🔐 Assinatura e integridade verificadas.
            
            ${{ steps.changelog.outputs.changelog }}
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Finalização
        run: echo "🎉 Build e release concluídos com sucesso!"
